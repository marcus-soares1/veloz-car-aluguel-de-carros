// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  client
  attendant
  admin
}

enum VehicleStatus {
  avaliable
  rented
  under_maintenance
  reserved
}

enum RentalStatus {
  reserved
  rented
  canceled
  finalized
  ended
  no_show
}

enum PaymentStatus {
  paid
  pending
}

enum PaymentMethod {
  pix
  credit
  debit
}

enum PaymentType {
  prepayment
  final
  security_deposit
  adjust
}

enum Brand {
  FIAT
  VOLKSWAGEN
  CHEVROLET
  FORD
  RENAULT
  HYUNDAI
  TOYOTA
  HONDA
  NISSAN
  PEUGEOT
  CITROEN
  KIA
  MITSUBISHI
  JEEP
  BMW
  MERCEDES_BENZ
  AUDI
  VOLVO
  CHERY
  BYD
  TESLA
  LAND_ROVER
  PORSCHE
  FERRARI
  LAMBORGHINI
  ALFA_ROMEO
  JAGUAR
  RAM
  GWM
  JAC
  TROLLER
}

enum Model {
  ARGO
  CRONOS
  MOBI
  PULSE
  FASTBACK
  STRADA
  TORO
  UNO
  PALIO
  SIENA
  M147
  M147_PICKUP
  PUNTO

  ONIX
  TRACKER
  SPIN
  PRISMA
  COBALT
  CRUZE
  JOY
  MONTANA
  ZAFIRA
  BLAZER

  KA
  KA_PLUS
  FIESTA
  FIESTA_SEDAN
  ECOSPORT
  FUSION
  FOCUS
  RANGER
  ESCAPE

  GOL
  SAVEIRO
  VOYAGE
  FOX
  PCROSS
  UP
  JETTA
  GOLF
  PASSAT
  AMAROK
  TIGUAN

  M207
  M208
  M2008
  M3008
  M5008
  PARTNER
  EXPERT

  LOGAN
  SANDERO
  STEPWAY
  DUSTER
  KWID
  CAPTUR
  FLUENCE
  SYMBOL

  HB20
  HB20S
  HB20X
  CRETA
  TUCSON
  SANT
}

model users {
  id            String    @id @default(uuid()) @db.Uuid
  name          String    @db.VarChar(255)
  email         String    @unique @db.VarChar(255)
  cpf           String    @db.VarChar(11)
  birthdate     DateTime
  password_hash String    @db.VarChar(255)
  phone         String?   @db.VarChar(255)
  role          Role      @default(client)
  rentals       rentals[]
  updated_at    DateTime  @updatedAt
  created_at    DateTime  @default(now())
}

model categories {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(255)
  description String     @db.VarChar(255)
  vehicles    vehicles[]
  updated_at  DateTime   @updatedAt
  created_at  DateTime   @default(now())
}

model vehicles {
  id               Int           @id @default(autoincrement())
  brand            Brand
  model            Model
  license_plate    String        @unique @db.VarChar(7)
  category_id      Int
  manufacture_year DateTime
  color            String        @db.VarChar(255)
  diary_value      Decimal
  status           VehicleStatus
  rentals          rentals[]
  kilometers       Decimal
  updated_at       DateTime      @updatedAt
  created_at       DateTime      @default(now())
  category         categories    @relation(fields: [category_id], references: [id])
}

model payments {
  id                   String        @id @default(uuid()) @db.Uuid
  rental_id            String        @db.Uuid
  amount               Decimal
  payment_date         DateTime?
  refund_date          DateTime?
  method_type          PaymentMethod
  status               PaymentStatus
  payment_type         PaymentType
  proof_of_payment_url String?       @db.VarChar(255)
  updated_at           DateTime      @updatedAt
  created_at           DateTime      @default(now())
  rental               rentals       @relation(fields: [rental_id], references: [id])
}

model rentals {
  id                     String       @id @default(uuid()) @db.Uuid
  vehicle_id             Int
  user_id                String       @db.Uuid
  check_out_date         DateTime
  expected_check_in_date DateTime
  check_in_date          DateTime?
  start_mileage          Decimal
  end_mileage            Decimal?
  status                 RentalStatus @default(reserved)
  daily_rate             Decimal
  additional_charges     Decimal      @default(0)
  penalties              Decimal      @default(0)
  payments               payments[]
  notes                  String?      @db.VarChar(255)
  updated_at             DateTime     @updatedAt
  created_at             DateTime     @default(now())
  vehicle                vehicles     @relation(fields: [vehicle_id], references: [id])
  user                   users        @relation(fields: [user_id], references: [id])
}
