openapi: 3.0.0
info:
  title: API Locadora de Autom√≥veis - VelozCar
  description: "API to manage users, vehicles, vehicle rentals and returns."
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/marcus-103/API-Locadora-VelozCar/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /users:
    get:
      tags:
      - Users
      summary: List all users
      description: |
        List all users. - **Clients** are NOT allowed. - **Attendants** can see all clients. - **Admins** can see all users.
      responses:
        "200":
          description: |
            List all users. - **Clients** are NOT allowed. - **Attendants** can see all clients. - **Admins** can see all users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "401":
          description: Unauthorized (if a non-user is trying to create an attendant or admin)
        "403":
          description: Forbidden (not allowed to create this user type)
      security:
      - bearerAuth: []
    post:
      tags:
      - Users
      summary: Create a new user
      description: |
        - Clients can register themselves without authentication. - Only authenticated **admins** can create users with role `attendant` or `admin`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
        required: true
      responses:
        "201":
          description: User created successfully
        "400":
          description: Invalid input
        "401":
          description: Unauthorized (if trying to create non-client)
        "403":
          description: Forbidden (not allowed to create this user type)
  /users/{id}:
    get:
      tags:
      - Users
      summary: Find a user by ID
      description: |
        - **Clients** can only see their own. - **Attendants** can see their own informations and all users informations. - **Admins** can see all users.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: User not found
        "401":
          description: Unauthorized (invalid credentials)
        "403":
          description: Forbidden (insufficient access)
      security:
      - bearerAuth: []
    put:
      tags:
      - Users
      summary: Update an existing user
      description: |
        - **Clients** and **Attendants** can update their own data. - **Admins** can update all users informations.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
        required: true
      responses:
        "200":
          description: User updated
        "401":
          description: Unauthorized (invalid credentials)
        "403":
          description: Forbidden (cannot update other users informations)
      security:
      - bearerAuth: []
    delete:
      tags:
      - Users
      summary: Delete an user
      description: |
        - **Clients** can delete their own profile. - **Attendants** can delete their own profile. - **Admins** can delete all users profile.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: User deleted
        "401":
          description: Unauthorized (invalid credentials)
        "403":
          description: Forbidden (cannot delete other users profile)
      security:
      - bearerAuth: []
  /vehicles:
    get:
      tags:
      - Vehicles
      summary: Get all vehicles by group
      description: |
        - Vehicles group
      parameters:
      - name: brand
        in: query
        required: false
        schema:
          type: string
      - name: model
        in: query
        required: false
        schema:
          type: string
      - name: color
        in: query
        required: false
        schema:
          type: string
      - name: category
        in: query
        required: false
        schema:
          type: string
      - name: manufactureYear
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Get all vehicles
    post:
      tags:
      - Vehicles
      summary: Create a new vehicle
      description: |
        - **Admins** and **Attendants** can create a new vehicle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
        required: true
      responses:
        "201":
          description: Vehicle created
  /vehicles/{id}:
    get:
      tags:
      - Vehicles
      summary: Get vehicle by ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Vehicle found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        "404":
          description: Vehicle not found
    put:
      tags:
      - Vehicles
      summary: Update vehicle
      description: |
        - **Admins** and **Attendants** can update vehicle info
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleInput'
        required: true
      responses:
        "200":
          description: Vehicle updated
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - bearerAuth: []
    delete:
      tags:
      - Vehicles
      summary: Delete vehicle
      description: |
        - **Admins** only can delete vehicles
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Vehicle deleted
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - bearerAuth: []
  /categories:
    get:
      tags:
      - Categories
      summary: List all categories
      responses:
        "200":
          description: List of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      tags:
      - Categories
      summary: Create a new category
      description: |
        - Only **Attendants** and **Admins** can create categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      responses:
        "201":
          description: Category created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - bearerAuth: []
  /categories/{id}:
    get:
      tags:
      - Categories
      summary: Get category by ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Category found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        "404":
          description: Category not found
    put:
      tags:
      - Categories
      summary: Update category
      description: |
        - Only **Admins** and **Attendants** can update categories
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      responses:
        "200":
          description: Category updated
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - bearerAuth: []
    delete:
      tags:
      - Categories
      summary: Delete category
      description: |
        - Only **Admins** can delete categories
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Category deleted
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - bearerAuth: []
  /rental/{id}:
    get:
      tags:
      - Rental
      summary: Get a vehicle by id
      description: |
        - **Clients** can only see their own rentals - **Atendants** and **Admins** can see all rentals
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Vehicle recupered
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Rental not found
      security:
      - bearerAuth: []
  /rental:
    post:
      tags:
      - Rental
      summary: Reserve a vehicle
      description: |
        - **Clients** can reserve a vehicle. - **Attendants** and **Admins** can reserve vehicles for clients.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RentalReserveInput'
        required: true
      responses:
        "201":
          description: Rental created (vehicle reserved)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rental'
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - bearerAuth: []
  /rental/{id}/checkout:
    post:
      tags:
      - Rental
      summary: Check-out (vehicle delivery)
      description: |
        - **Attendants** or **Admins** perform the delivery of the vehicle.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Vehicle checked out (rental started)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rental'
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Rental not found
      security:
      - bearerAuth: []
  /rental/{id}/checkin:
    post:
      tags:
      - Rental
      summary: Check-in (vehicle return)
      description: |
        - **Attendants** or **Admins** perform the return of the vehicle.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/id_checkin_body'
      responses:
        "200":
          description: Vehicle checked in (rental finalized)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rental'
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Rental not found
      security:
      - bearerAuth: []
  /rental/{id}/cancel:
    post:
      tags:
      - Rental
      summary: Cancel a rental
      description: |
        - **Clients** can cancel a rental before check-out. - **Attendants** or **Admins** can cancel any rental if needed.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Rental cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rental'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Rental not found
      security:
      - bearerAuth: []
components:
  schemas:
    UserInput:
      required:
      - cpf
      - email
      - name
      - password_hash
      - role
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        cpf:
          type: string
        password_hash:
          type: string
        phone:
          type: string
        role:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        role:
          type: string
          enum:
          - Admin
          - Atendente
          - Cliente
    Vehicle:
      type: object
      properties:
        id:
          type: string
        brand:
          type: string
        model:
          type: string
        license_plate:
          type: string
        category_id:
          type: string
        kilometers:
          type: integer
        manufacture_year:
          type: integer
        color:
          type: string
        diary_value:
          type: number
          format: float
        status:
          type: string
          enum:
          - Dispon√≠vel
          - Alugado
          - Em manuten√ß√£o
    VehicleInput:
      type: object
      properties:
        brand:
          type: string
        model:
          type: string
        license_plate:
          type: string
        category_id:
          type: string
        kilometers:
          type: integer
        manufacture_year:
          type: integer
        color:
          type: string
        diary_value:
          type: number
          format: float
    Category:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        descricao:
          type: string
    Rental:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        vehicle_id:
          type: string
        status:
          type: string
          enum:
          - Reservado
          - Alugado
          - Cancelado
          - Finalizado
        start_mileage:
          type: integer
        end_mileage:
          type: integer
        check_in_date:
          type: string
          format: date-time
        check_out_date:
          type: string
          format: date-time
        daily_rate:
          type: number
          format: float
        additional_charges:
          type: number
          format: float
        penalties:
          type: number
          format: float
        notes:
          type: string
    RentalReserveInput:
      type: object
      properties:
        vehicle_id:
          type: string
        check_in_date:
          type: string
          format: date-time
    RentalStatusChange:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
    Payment:
      type: object
      properties:
        id:
          type: string
        rental_id:
          type: string
        status:
          type: string
          enum:
          - Pago
          - Pendente
          - Devolvido
          - Adiantado
        payment_type:
          type: string
          enum:
          - Adiantamento
          - Final
          - Cau√ß√£o
          - Ajuste
        payment_method:
          type: string
        method_type:
          type: string
        refund_date:
          type: string
          format: date-time
        proof_of_payment_url:
          type: string
          format: uri
    id_checkin_body:
      required:
      - end_mileage
      type: object
      properties:
        end_mileage:
          type: integer
        additional_charges:
          type: number
          format: float
        notes:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
